version: '3.7'

# This docker-compose file brings up a Downtime Databse instance pointing to
# localhost for its connections to a postgres DB and the Observation Portal. You
# will want to modify the DB_* environment variables to connect to your db backend,
# and modify the OAUTH_* environment variables to contain the correct credentials for
# your Observation Portal oauth Downtime application.
services:
    nginx:
        image: nginx:1.19.0-alpine
        ports:
            - 7500:80
        volumes:
            - ./nginx.conf:/etc/nginx/conf.d/default.conf
            - static_volume:/app/staticfiles
        depends_on:
            - downtime
    downtime:
        image: observatorycontrolsystem/downtime:2.3.2
        expose:
          - "7501"
        environment:
          # Note that when using the default docker network on linux, 172.17.0.1 works
          # for localhost of the host network, but for mac you will need to use 
          # `host.docker.internal` instead to point to localhost of the host network.
          - DB_HOST=172.17.0.1
          - DB_ENGINE=django.db.backends.postgresql
          - DB_NAME=downtime
          - DB_USER=postgres
          - DB_PASS=postgres
          - DB_PORT=5432
          - SECRET_KEY=downtime_secret_key
          - CONFIGDB_URL=http://172.17.0.1:7000
          - OAUTH_CLIENT_ID={observation_portal_oauth_application_client_id}
          - OAUTH_CLIENT_SECRET={observation_portal_oauth_application_client_secret}
          - OAUTH_TOKEN_URL=http://172.17.0.1:8000/o/token/
          - OAUTH_PROFILE_URL=http://172.17.0.1:8000/api/profile/
        mem_limit: "512m"
        restart: always
        volumes:
          - static_volume:/app/staticfiles
        command: >
            sh -c "python manage.py migrate
            && python manage.py collectstatic --no-input
            && gunicorn --bind=0.0.0.0:7501 --workers=4 --access-logfile=- --error-logfile=- downtime.wsgi"

volumes:
    static_volume:
